/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  v2406
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvOptions;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

kolmogorovForce
{
    type            vectorCodedSource;
    active          true;
    name            kolmogorovForce;
    
    selectionMode   all;
    fields          (U);


    codeConstrain //constrain
    #{
        return;
    #};

    codeCorrect //correct
    #{
        return;
    #};

    codeAddSup
    #{
        // Pout<< "**codeAddSup**" << endl;

        const scalar L = 2.0;  // Domain height in y
        const dimensionedScalar pi = constant::mathematical::pi;
        const scalar A = 1.0;
	const scalar n = 3;
        
        const vectorField& C = mesh_.C();
        
        vectorField& source = eqn.source();
        const scalarField& V = mesh_.V();
        
        // Implementation of du/dt += sin(2*pi*y/L) in x direction
        forAll(source, i)
        {
            scalar y = C[i].y();
            scalar kolmTerm = A * sin(2.0 * n * pi.value() * y / L);
            
            // Add source term only in x-direction
            source[i][0] += V[i] * kolmTerm;
        }
    #};

    codeAddSupRho
    #{
        return;
    #};
}

// ************************************************************************* //
